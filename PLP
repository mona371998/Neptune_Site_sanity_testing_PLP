package neptune_testing;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

import org.apache.poi.util.SystemOutLogger;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

public class Neptune_Site_sanity_testing_PLP {
	 
	 public static WebDriver driver;
	 
	 public static void main(String[] args) throws Exception {
		 VerifyBrokenImages();
		}

		public static void VerifyBrokenImages() throws Exception {
			
			//..............................................
		
			FileInputStream file=new FileInputStream("D:\\Neptune Sanity testing\\Naptune_test.xlsx");
			
		
			XSSFWorkbook workbook=new XSSFWorkbook(file);
			XSSFSheet sheet=workbook.getSheet("PE");
			
			XSSFWorkbook workbook1=new XSSFWorkbook();
			XSSFSheet sheet1=workbook1.createSheet("PLP_image");
			
			
			
			int rows=sheet.getLastRowNum();
			int cols=sheet.getRow(0).getLastCellNum();
			WebDriver driver = new ChromeDriver();
			
			for(int r=0;r<=rows;r++)
			{
				XSSFRow row=sheet.getRow(r);  
				
				for(int c=0;c<cols;c++) 
				{
					XSSFCell cell=row.getCell(c);
					String abc= cell.getStringCellValue();
					
					//System.out.print(cell.getStringCellValue()); 
					System.out.println();
					
					//......................................................
				
					//WebDriver driver = new ChromeDriver();
			driver.get(abc);
			
		    Scanner sc= new Scanner(System.in);
             Thread.sleep(5000);
			System.out.print("> Enter any number- ");  
			int a= sc.nextInt(); 
			System.out.println(">"+cell.getStringCellValue()); 
			 HashMap<String,String> images=new HashMap<String,String>();
			//List<WebElement> images = driver.findElements(By.className("coveo-list-layout CoveoResult "));
			List<WebElement> coveoResult = driver.findElements(By.className("coveo-list-layout"));
			for (WebElement item : coveoResult) 
			{ 
				WebElement coveowrap = item.findElement(By.className("nep-coveo-wrap"));
				WebElement coveocard = coveowrap.findElement(By.className("nep-coveo-card"));
				WebElement coveothumbnail = coveocard.findElement(By.className("nep-coveo-thumbnail"));
				WebElement anchor = coveothumbnail.findElement(By.tagName("a"));
				String sku = anchor.getAttribute("href");
				WebElement img = anchor.findElement(By.tagName("img"));
				String imageSrc = img.getAttribute("src");
				int width = Integer.parseInt(img.getAttribute("naturalWidth"));

				//int a=Integer.parseInt(width)

				if(width == 0) {
					images.put(sku, null);
				}else {					
				images.put(sku, imageSrc);
				}

			}
	Object empdata[][] = new Object[50][50];
			int i=0;
			  for(Map.Entry m : images.entrySet()){   
				    System.out.println(m.getKey()+"> "+m.getValue());
				   }}
				
				
				
			}
			System.out.println("all PLP run successfully");
			driver.quit();
			}}
